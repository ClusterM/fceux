name: Ubuntu Linux

on:
  push:
    branches: [ coolgirl ]
  pull_request:
    branches: [ coolgirl ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  INSTALL_PREFIX: /tmp/fceux

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Installing Package Dependencies
      run: |
        sudo apt-get --assume-yes update
        sudo apt-get --assume-yes install lua5.1-dev
        pkg-config --cflags --libs lua5.1
        sudo apt-get --assume-yes install libsdl2-dev  
        sdl2-config --cflags --libs
        sudo apt-get --assume-yes install libminizip-dev
        pkg-config --cflags --libs minizip
        sudo apt-get --assume-yes install qt5-default
        sudo apt-get --assume-yes install libx264-dev
        sudo apt-get --assume-yes install cppcheck

    - name: Build
      run: |
        mkdir -p $INSTALL_PREFIX/usr
        mkdir buildQT
        cd buildQT
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
        make -j $(nproc)
        make install DESTDIR=${{env.INSTALL_PREFIX}}

    - name: Create Debian Package
      run: |
        sed -i 's/Package: fceux/Package: fceux-coolgirl/g' ./pipelines/debpkg.pl
        ./pipelines/debpkg.pl
        
    - name: Test
      run: sudo dpkg -i /tmp/fceux-*.deb

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: fceux-ubuntu
        path: /tmp/fceux-*.deb

    - name: Upload to the site
      if: github.event_name != 'pull_request'
      run: |
        curl -F "file=@$(find /tmp -maxdepth 1 -name fceux-*.deb)" -F 'key=${{secrets.UPLOADER_KEY}}' -F 'name=fceux.deb' '${{secrets.UPLOADER_URL}}'
